# Create baidu map control.
createBMap = (container) ->
    map = new BMap.Map(container)
    map.addControl(new BMap.NavigationControl())
    map.addControl(new BMap.ScaleControl())
    map.enableScrollWheelZoom()
    return map

# Display bike location marker
displayBikeLocationMarker = (map, point, title) ->
  icon = new BMap.Icon("<%= asset_url('bike_marker.gif') %>",
                       new BMap.Size(75, 65)) 

  marker = new BMap.Marker(point, {icon: icon})

  label = new BMap.Label(title, {offset: new BMap.Size(-30, 30)})
  label.setStyle(
     color: "rgb(255,65,54)"
     fontWeight: "bold"
     fontSize: "18px"
     borderStyle: "none")

  marker.setLabel(label)
  map.addOverlay(marker)

# Display bike location map.
displayBikeLocationMap = (container, userName, bikeName, longitude, latitude) ->
    map = createBMap(container)

    point = new BMap.Point(longitude, latitude)

    map.centerAndZoom(point, 19)

    convertor = new BMap.Convertor()
    convertor.translate([point], 1, 5, (data) ->
      if data.status == 0
        convertedPoint = data.points[0]
        displayBikeLocationMarker(map,
                                  convertedPoint,
                                  userName + "的" + bikeName + "的位置")
        map.centerAndZoom(convertedPoint, 19)
    )

# Global convertor object
ConvertorData = {
  convertor: null,
  map: null,
  points: null,
  index: 0,
  count: 0,
  userName: "",
  bikeName: ""
}

MAX_CONVERT_COUNT = 10

# Add polyline to map
addPolyline = (map, points, count, userName, bikeName) ->
  polyline = new BMap.Polyline(points,
      strokeColor: "#FF264F",
      strokeWeight: 4,
      strokeOpacity: 0.8)

  map.addOverlay(polyline)
  #polyline.enableEditing()

  displayBikeLocationMarker(map,
                            points[count - 1],
                            userName + "的" + bikeName + "行驶轨迹")

  map.centerAndZoom(points[count - 1], 17)

# BMap convertor translate callback
translateCallback = (data) ->
  if data.status == 0
    length     = data.points.length
    totalCount = ConvertorData.count
    index      = ConvertorData.index
    points     = ConvertorData.points

    points[index...index + length] = data.points
    index += length

    if index >= totalCount
      addPolyline(ConvertorData.map,
                  ConvertorData.points,
                  ConvertorData.count,
                  ConvertorData.userName,
                  ConvertorData.bikeName)
    else
      ConvertorData.index = index
      ConvertorData.convertor.translate(points[index...index + MAX_CONVERT_COUNT],
        1, 5, translateCallback)
      


# Display bike track map.
displayBikeTrackMap = (container, userName, bikeName, locations) ->
    map = createBMap(container)

    count = locations.length

    return if count == 0

    points = new Array()

    for location in locations
        point = new BMap.Point(location.longitude, location.latitude)
        points.push(point)

    map.centerAndZoom(points[count - 1], 19)

    convertor = new BMap.Convertor()

    # Set global convertor data.
    ConvertorData.convertor = convertor
    ConvertorData.map       = map
    ConvertorData.points    = points
    ConvertorData.index     = 0
    ConvertorData.userName  = userName
    ConvertorData.bikeName  = bikeName
    ConvertorData.count     = count

    firstPoints = points[ConvertorData.index ... ConvertorData.index + MAX_CONVERT_COUNT]

    convertor.translate(firstPoints, 1, 5, translateCallback)

# Set bike maps size.
setBikeMapsSize = ->
  mapHeight = window.innerHeight - 200 
  $("#bike-location-map").height(mapHeight)
  $("#bike-track-map").height(mapHeight)

# Create map control and set event handlers.
$ ->
  setBikeMapsSize()

  # Default display bike location map.
  displayBikeLocationMap("bike-location-map",
    gon.userName,
    gon.bikeName,
    gon.longitude,
    gon.latitude)

  isBikeTrackMapShown = false
  $('a[href="#map-track-tab"]').on 'shown.bs.tab', ->
      if !isBikeTrackMapShown
          displayBikeTrackMap("bike-track-map", gon.userName, gon.bikeName, gon.travelTrackHistories)
          isBikeTrackMapShown = true
